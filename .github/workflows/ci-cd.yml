name: CI/CD Pipeline

on:
  push:
    branches: ['**']
  pull_request:
    branches: ['main']

env:
  DOCKER_IMAGE_NAME: 'hackin2-api'

jobs:
  integration-test:
    name: Integration Testing
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Clean install node packages
        run: npm ci

      - name: Build
        run: npm run build

      - name: Set up Docker
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Start test containers and run migrations
        run: ./integration-starter.sh

      - name: Run tests
        run: npm test

      - name: Tear down Docker services
        if: always()
        run: docker compose -f test-compose.yml down

  deploy-staging:
    name: Deploy to Azure Staging
    runs-on: ubuntu-latest
    needs: integration-test
    if: ${{ github.ref != 'refs/head/main' }}
    
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        run: |
          docker build -t ghcr.io/${{ github.repository }}/${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }} .
          docker push ghcr.io/${{ github.repository }}/${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}

      - name: Deploy to Azure Web App (Staging)
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'hackin2-api-stg'
          publish-profile: ${{ secrets.AZURE_PUBLISH_PROFILE_STG }}
          images: ghcr.io/${{ github.repository }}/${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}
